<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yigou.mapper.GoodsMapper">
  

  
  <resultMap id="BaseResultMap" type="com.yigou.entity.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goodsname" jdbcType="VARCHAR" property="goodsname" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="sales" jdbcType="INTEGER" property="sales" />
    <result column="format" jdbcType="VARCHAR" property="format" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="listid" jdbcType="INTEGER" property="listid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goodsname, price, stock, sales, format, introduction, listid
  </sql>
  <select id="selectByExample" parameterType="com.yigou.entity.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 获取前八个值 -->
  <select id="selectByLimit" parameterType="java.lang.Integer" resultMap="BaseResultMap">
       select * from goods where listid=#{listid, jdbcType=INTEGER} limit #{offset},#{limit} 
  </select>
  
  <!-- 获取hot 商品 -->
  <select id="selectByHot" parameterType="java.lang.Integer" resultMap="BaseResultMap">
       select * from goods where listid=#{listid, jdbcType=INTEGER} order by sales desc limit #{offset},#{limit} 
  </select>
  
  <select id="selectBySales"  resultMap="BaseResultMap">
       select * from goods order by sales desc limit #{offset},#{limit} 
  </select>
  
  <select id="total" resultType="int">
  	select count(*) from goods
  </select>
  
   <select id="list" resultType="Goods">
  		select * from goods
  		<if test="start!=null and count!=null">
  			limit #{start},#{count}
  		</if>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.yigou.entity.Goods" useGeneratedKeys="true">
    insert into goods (goodsname, price, stock, 
      sales, format, introduction, 
      listid)
    values (#{goodsname,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{stock,jdbcType=INTEGER}, 
      #{sales,jdbcType=INTEGER}, #{format,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, 
      #{listid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.yigou.entity.Goods" useGeneratedKeys="true">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsname != null">
        goodsname,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="sales != null">
        sales,
      </if>
      <if test="format != null">
        format,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="listid != null">
        listid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        #{sales,jdbcType=INTEGER},
      </if>
      <if test="format != null">
        #{format,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="listid != null">
        #{listid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yigou.entity.Goods">
    update goods
    <set>
      <if test="goodsname != null">
        goodsname = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="sales != null">
        sales = #{sales,jdbcType=INTEGER},
      </if>
      <if test="format != null">
        format = #{format,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="listid != null">
        listid = #{listid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yigou.entity.Goods">
    update goods
    set goodsname = #{goodsname,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      stock = #{stock,jdbcType=INTEGER},
      sales = #{sales,jdbcType=INTEGER},
      format = #{format,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      listid = #{listid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>