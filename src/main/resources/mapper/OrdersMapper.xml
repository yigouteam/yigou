<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yigou.mapper.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.yigou.entity.Orders">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="orderCode" jdbcType="VARCHAR" property="orderCode" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="add_id" jdbcType="INTEGER" property="add_id" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="ordertime" jdbcType="TIMESTAMP" property="ordertime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="total" jdbcType="REAL" property="total" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, orderCode, userid, add_id, note, ordertime, status, total
  </sql>
  <select id="selectByExample" parameterType="com.yigou.entity.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="total" resultType="int">
  	select count(*) from orders
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.yigou.entity.Orders" useGeneratedKeys="true">
    insert into orders (orderCode, userid, add_id, 
      note, ordertime, status, 
      total)
    values (#{orderCode,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{add_id,jdbcType=INTEGER}, 
      #{note,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{total,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.yigou.entity.Orders" useGeneratedKeys="true">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        orderCode,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="add_id != null">
        add_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="ordertime != null">
        ordertime,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="total != null">
        total,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderCode != null">
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="add_id != null">
        #{add_id,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null">
        #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        #{total,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yigou.entity.Orders">
    update orders
    <set>
      <if test="orderCode != null">
        orderCode = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="add_id != null">
        add_id = #{add_id,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="ordertime != null">
        ordertime = #{ordertime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yigou.entity.Orders">
    update orders
    set orderCode = #{orderCode,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      add_id = #{add_id,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      ordertime = #{ordertime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      total = #{total,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>